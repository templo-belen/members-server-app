name: Integration Tests

on:
  pull_request:
    branches:
      - master

jobs:
  test:
    name: integration tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Start docker test environment
        run: docker compose -f docker-compose.test.yml up -d

      - name: Wait for Flyway migrations to complete
        run: |
          echo "Waiting for Flyway migrations to complete..."
          
          # Wait for flyway service to complete and capture exit code
          if docker compose -f docker-compose.test.yml wait flyway-test; then
            echo "✅ Flyway migrations completed successfully"
          else
            echo "❌ Flyway migrations failed"
            echo "Flyway logs:"
            docker compose -f docker-compose.test.yml logs flyway
            exit 1
          fi

      - name: Run tests
        run: ENV=test pytest --color=yes --tb=short -q

      - name: Tear down docker test environment
        if: always()
        run: docker compose -f docker-compose.test.yml down -v
